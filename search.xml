<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Bootstrap Tutorial]]></title>
    <url>%2F%2FBootstrap%2Fbootstrap4-tutorial</url>
    <content type="text"><![CDATA[.codeSnip{ color:blue } Starter Template12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt; &lt;head&gt; &lt;!-- Required meta tags --&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"&gt; &lt;!-- Bootstrap CSS --&gt; &lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class="container"&gt; &lt;h1&gt;Hello, world!&lt;/h1&gt; &lt;/div&gt; &lt;!-- Optional JavaScript --&gt; &lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt; &lt;script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"&gt;&lt;/script&gt; &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"&gt;&lt;/script&gt; &lt;script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" integrity="sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1" crossorigin="anonymous"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; ContainerBootstrap also requires a containing element to wrap site contents.There are two container classes to choose from: The .container class provides a responsive fixed width container. The .container-fluid class provides a full width container, spanning the entire width of the viewport GridBootstrap’s grid system allows up to 12 columns across the page.Bootstrap’s grid system is responsive, and the columns will re-arrange automatically depending on the screen size.The Bootstrap grid system has four classes: xs (for phones) sm (for tablets) md (for desktops) lg (for larger desktops) Creating a row use the syntax1&lt;div class="row"&gt; then, add the size and the number of columns, syntax like: class=’col-*-*‘, example:1&lt;div class="col-sm-4"&gt;&lt;/div&gt; Example: Adding a 3 equal-width columns: ImagesThe following class can be used to style any images: Class Description .img-rounded Add rounded corners to an image .imag-circle An circle image .imag-thumbnail Shapes the image to a thunmbnail .img-responsive Image will scaled nicely to the parent Example:123&lt;div class="container"&gt; &lt;img class="img-responsive" src="img_chania.jpg" alt="Chania" width="460" height="345"&gt;&lt;/div&gt; Image GalleryUse grid system and the .thumbnail class to create an image gallery1234567891011121314151617181920212223242526272829303132&lt;div class="row"&gt; &lt;div class="col-md-4"&gt; &lt;div class="thumbnail"&gt; &lt;a href="/w3images/lights.jpg"&gt; &lt;img src="/w3images/lights.jpg" alt="Lights" style="width:100%"&gt; &lt;div class="caption"&gt; &lt;p&gt;Lorem ipsum...&lt;/p&gt; &lt;/div&gt; &lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="col-md-4"&gt; &lt;div class="thumbnail"&gt; &lt;a href="/w3images/nature.jpg"&gt; &lt;img src="/w3images/nature.jpg" alt="Nature" style="width:100%"&gt; &lt;div class="caption"&gt; &lt;p&gt;Lorem ipsum...&lt;/p&gt; &lt;/div&gt; &lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="col-md-4"&gt; &lt;div class="thumbnail"&gt; &lt;a href="/w3images/fjords.jpg"&gt; &lt;img src="/w3images/fjords.jpg" alt="Fjords" style="width:100%"&gt; &lt;div class="caption"&gt; &lt;p&gt;Lorem ipsum...&lt;/p&gt; &lt;/div&gt; &lt;/a&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; JumbotronA jumbotron is displayed as a big grey box with rounded corner. It enlarges the font size of the text inside it for calling attention to some special contents or informations. Use a div element with class .jumbotron to create a jumbotron. We could place the jumbotron inside or outside the &lt; div class=”container” &gt; , depends on if you want jumbotron to extend to the edge of the screen or not.1234567&lt;div class="jumbotron"&gt; &lt;h1&gt;Bootstrap Tutorial&lt;/h1&gt; &lt;/div&gt;&lt;div class="container"&gt; &lt;p&gt;This is some text.&lt;/p&gt; &lt;/div&gt; WellThe .well class adds a rounded border around an element with grey background color and some padding. Change the size of the well by adding the .well-sm or .well-lg class.1234&lt;div class="container"&gt; &lt;h2&gt;Well&lt;/h2&gt; &lt;div class="well well-lg"&gt;Basic Well&lt;/div&gt;&lt;/div&gt; AlertAlerts are created with .alert class, follwed by one of the four classes .alert-success .alert-info .alert-warning .alert-danger. Add .alert-link class to any links inside the alert box to create “matching colored links”.1234567891011121314&lt;div class="container"&gt;&gt; &lt;div class="alert alert-success"&gt; &lt;strong&gt;Success!&lt;/strong&gt; You should &lt;a href="#" class="alert-link"&gt;read this message&lt;/a&gt;. &lt;/div&gt; &lt;div class="alert alert-info"&gt; &lt;strong&gt;Info!&lt;/strong&gt; You should &lt;a href="#" class="alert-link"&gt;read this message&lt;/a&gt;. &lt;/div&gt; &lt;div class="alert alert-warning"&gt; &lt;strong&gt;Warning!&lt;/strong&gt; You should &lt;a href="#" class="alert-link"&gt;read this message&lt;/a&gt;. &lt;/div&gt; &lt;div class="alert alert-danger"&gt; &lt;strong&gt;Danger!&lt;/strong&gt; You should &lt;a href="#" class="alert-link"&gt;read this message&lt;/a&gt;. &lt;/div&gt;&lt;/div&gt; would be: To close the alert message, add a .alert-dismissable class to the alert container and class=’close’ and data-dismiss=’alert’ to a link or a button element(click on this, alert message will disappear) 123456&lt;div class="container"&gt; &lt;div class="alert alert-success alert-dismissable"&gt; &lt;a href="#" class="close" data-dismiss="alert" aria-label="close"&gt;×&lt;/a&gt; &lt;strong&gt;Success!&lt;/strong&gt; This alert box could indicate a successful or positive action. &lt;/div&gt;&lt;/div&gt; would be: ButtonThe button classes can be used on an &lt; a &gt; , &lt; button &gt; or &lt; input &gt; elements with different color and size.123456789&lt;div class="container"&gt; &lt;button type="button" class="btn btn-xs"&gt;Basic&lt;/button&gt; &lt;a href="#" class="btn btn-info btn-sm" role="button"&gt;Link Button&lt;/a&gt; &lt;button type="button" class="btn btn-primary btn-md"&gt;Button&lt;/button&gt; &lt;button type="button" class="btn btn-success btn-lg"&gt;Button&lt;/button&gt; &lt;input type="button" class="btn btn-warning btn-md" value="Input Button"&gt; &lt;input type="submit" class="btn btn-danger btn-sm" value="Submit Button"&gt; &lt;button type="button" class="btn btn-link btn-xs"&gt;Link&lt;/button&gt;&lt;/div&gt; would be:Block level button spans the entire width of the parent element.A button could be set to an active or disabled state.1234567891011&lt;style&gt;.btn-primary &#123; background: #ABC864;&#125;&lt;/style&gt;&lt;div class="container"&gt; &lt;button type="button" class="btn btn-primary"&gt;Primary Button&lt;/button&gt; &lt;button type="button" class="btn btn-primary active btn-block"&gt;Active Primary&lt;/button&gt; &lt;button type="button" class="btn btn-primary disabled btn-block"&gt;Disabled Primary&lt;/button&gt;&lt;/div&gt; would be: Button groups and dropdown menuUse the .btn-group class within a &lt; div &gt; element to create a button group, specify the size with .btn-group-lg|sm|xs class, and the vertical orientation(default is horizontal) with .btn-group-vertical class.1234567&lt;div class="container"&gt; &lt;div class="btn-group-vertical btn-group-lg"&gt; &lt;button type="button" class="btn btn-primary"&gt;Apple&lt;/button&gt; &lt;button type="button" class="btn btn-primary"&gt;Samsung&lt;/button&gt; &lt;button type="button" class="btn btn-primary"&gt;Sony&lt;/button&gt; &lt;/div&gt;&lt;/div&gt; would be: Dropdown menus button:1234567891011121314&lt;div class="container"&gt; &lt;div class="btn-group"&gt; &lt;button type="button" class="btn btn-primary"&gt;Apple&lt;/button&gt; &lt;button type="button" class="btn btn-primary"&gt;Samsung&lt;/button&gt; &lt;div class="btn-group"&gt; &lt;button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"&gt; Sony &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class="dropdown-menu" role="menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Tablet&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Smartphone&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; would be: Split button dropdown123456789101112&lt;div class="container"&gt; &lt;div class="btn-group"&gt; &lt;button type="button" class="btn btn-primary"&gt;Sony&lt;/button&gt; &lt;button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"&gt; &lt;span class="caret"&gt;&lt;/span&gt; &lt;/button&gt; &lt;ul class="dropdown-menu" role="menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Tablet&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Smartphone&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt; would be: BadgeUse the .badge class within &lt; span &gt; elements to create badges:12345&lt;div class="container"&gt; &lt;button type="button" class="btn btn-primary"&gt;Primary &lt;span class="badge"&gt;7&lt;/span&gt;&lt;/button&gt; &lt;button type="button" class="btn btn-success"&gt;Success &lt;span class="badge"&gt;3&lt;/span&gt;&lt;/button&gt; &lt;button type="button" class="btn btn-danger"&gt;Danger &lt;span class="badge"&gt;5&lt;/span&gt;&lt;/button&gt; &lt;/div&gt; LabelUse the .label class within &lt; span &gt; elements to create badges:12345678&lt;div class="container"&gt; &lt;h1&gt;&lt;span class="label label-default"&gt;Default Label&lt;/span&gt;&lt;/h1&gt; &lt;h2&gt;&lt;span class="label label-primary"&gt;Primary Label&lt;/span&gt;&lt;/h2&gt; &lt;h3&gt;&lt;span class="label label-success"&gt;Success Label&lt;/span&gt;&lt;/h3&gt; &lt;h4&gt;&lt;span class="label label-info"&gt;Info Label&lt;/span&gt;&lt;/h4&gt; &lt;h5&gt;&lt;span class="label label-warning"&gt;Warning Label&lt;/span&gt;&lt;/h5&gt; &lt;h6&gt;&lt;span class="label label-danger"&gt;Danger Label&lt;/span&gt;&lt;/h6&gt;&lt;/div&gt; would be: Progress barsTo create a default progress bar, add a .progress class to a &lt; div &gt; elements.Bootstrap provides Colored progress bar, Striped progress bar, Animated progress bar and Stacked progress bar1234567891011121314151617181920212223242526272829&lt;style&gt;.normal&#123; background: black;&#125;&lt;/style&gt;&lt;div class="container"&gt; &lt;div class="progress"&gt; &lt;div class="progress-bar progress-bar-success progress-bar-striped" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width:40%"&gt; 40% Complete (success) &lt;/div&gt; &lt;/div&gt; &lt;div class="progress"&gt; &lt;div class="progress-bar progress-bar-info progress-bar-striped active" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:50%"&gt; 50% Complete (info) &lt;/div&gt; &lt;/div&gt; &lt;div class="progress"&gt; &lt;div class="progress-bar normal " role="progerssbar" style="width:20%"&gt; 20% Complete(black) &lt;/div&gt; &lt;div class="progress-bar progress-bar-warning" role="progressbar" style="width:60%"&gt; 60% Complete (warning) &lt;/div&gt; &lt;div class="progress-bar progress-bar-danger" role="progressbar" style="width:20%"&gt; 20% Complete (danger) &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; would be: PaginationIf you have a website with lots of pages, you wish to add some sort of pagination to each page. To create a basic pagination, add the .pagination class to an &lt; ul &gt; element. Class .active indicate that the page that users are now on. Class .disabled means a link is for some reason disabled.You can also set the size of the pagination with class .pagination-lg|sm.123456789&lt;div class="container"&gt; &lt;ul class="pagination pagination-lg"&gt; &lt;li class="active"&gt;&lt;a href="#" &gt;1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;3&lt;/a&gt;&lt;/li&gt; &lt;li class="disabled"&gt;&lt;a href="#"&gt;4&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;5&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; would be: Another form for pagination if Breadcrumbs. The Breadcrumbs indicates the current page’s location within a navigation hierachy:12345678&lt;div class="container"&gt; &lt;ul class="breadcrumb"&gt; &lt;li&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Private&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Pictures&lt;/a&gt;&lt;/li&gt; &lt;li class="active"&gt;Vacation&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; would be: List groupsTo create a basic list group, use an &lt; ul &gt; element with class .list-group and &lt; li &gt; element with class .list-group-item.1234567&lt;div class="container"&gt; &lt;ul class="list-group"&gt; &lt;li class="list-group-item"&gt;New &lt;span class="badge"&gt;12&lt;/span&gt;&lt;/li&gt; &lt;li class="list-group-item"&gt;Deleted &lt;span class="badge"&gt;5&lt;/span&gt;&lt;/li&gt; &lt;li class="list-group-item"&gt;Warnings &lt;span class="badge"&gt;3&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; would be: To create a list group with linked items, use &lt; div &gt; instead of &lt; ul &gt; and &lt; a &gt; instead of &lt; li &gt; :1234567&lt;div class="container"&gt; &lt;div class="list-group"&gt; &lt;a href="#" class="list-group-item disabled"&gt;First item&lt;/a&gt; &lt;a href="#" class="list-group-item"&gt;Second item&lt;/a&gt; &lt;a href="#" class="list-group-item active"&gt;Third item&lt;/a&gt; &lt;/div&gt;&lt;/div&gt; would be: Bootstrap provides also colored and the class .list-group-item-heading and .list-group-item-text which can be used as follows:12345678910111213141516&lt;div class="container"&gt; &lt;div class="list-group"&gt; &lt;a href="#" class="list-group-item list-group-item-info"&gt; &lt;h4 class="list-group-item-heading"&gt;First List Group Item Heading&lt;/h4&gt; &lt;p class="list-group-item-text"&gt;List Group Item Text&lt;/p&gt; &lt;/a&gt; &lt;a href="#" class="list-group-item list-group-item-success"&gt; &lt;h4 class="list-group-item-heading"&gt;Second List Group Item Heading&lt;/h4&gt; &lt;p class="list-group-item-text"&gt;List Group Item Text&lt;/p&gt; &lt;/a&gt; &lt;a href="#" class="list-group-item list-group-item-warning"&gt; &lt;h4 class="list-group-item-heading"&gt;Third List Group Item Heading&lt;/h4&gt; &lt;p class="list-group-item-text"&gt;List Group Item Text&lt;/p&gt; &lt;/a&gt; &lt;/div&gt;&lt;/div&gt; would be: PanelsA panel is a bordered box with some padding around its content. Panel are created with the .panel class and content inside the panel has a .panel-body class.The .panel-default class is used to style the color of the panel.Panel has also heading and footer with class The .panel-heading and The .panel-footer.To group many panels together, wrap a &lt; div &gt; class with class .panel-group around them. The .panel-group class clears the bottom-margin of each panel:123456789101112131415161718&lt;div class="container"&gt; &lt;div class="panel-group"&gt; &lt;div class="panel panel-default"&gt; &lt;div class="panel-heading"&gt;Panel with panel-success class&lt;/div&gt; &lt;div class="panel-body"&gt;Panel Content&lt;/div&gt; &lt;/div&gt; &lt;div class="panel panel-info"&gt; &lt;div class="panel-heading"&gt;Panel with panel-info class&lt;/div&gt; &lt;div class="panel-body"&gt;Panel Content&lt;/div&gt; &lt;/div&gt; &lt;div class="panel panel-danger"&gt; &lt;div class="panel-heading"&gt;Panel with panel-danger class&lt;/div&gt; &lt;div class="panel-body"&gt;Panel Content&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; would be: DropdownDropdown menu is defined by the &lt; div &gt; element with class .dropdown.To open the dropdown menu, use a button or a link with a class of .dropdown-toggle and the data-toggle=”dropdown” attribute. .caret class creates a caret arrow icon(), which indicates that the button is a dropdown. .dropdown-menu class within a &lt; ul &gt; element to actually build the dropdown menu. .divider class is used to draw a horizontal border to seperate links. .dropdown-header class is used to add a header inside the dropdown menu. .disabled class and .active class to disable and active a dropdown item. .dropup instead of .dropdown to expand upwards instead of downwards.12345678910111213141516&lt;div class="container"&gt; &lt;div class="dropdown"&gt; &lt;button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown"&gt;Tutorials &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; &lt;ul class="dropdown-menu"&gt; &lt;li class="dropdown-header"&gt;Dropdown header 1&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;HTML&lt;/a&gt;&lt;/li&gt; &lt;li class="active"&gt;&lt;a href="#"&gt;CSS&lt;/a&gt;&lt;/li&gt; &lt;li class="disabled"&gt;&lt;a href="#"&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &lt;li class="divider"&gt;&lt;/li&gt; &lt;li class="dropdown-header"&gt;Dropdown header 2&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;About Us&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Contanct Us&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt; would be: Collapse.collapse class indicates a collapsible element. This is the content that will be shown or hidden.To control the collapsible element, add the data-toggle=’collapse’ class to an &lt;a&gt; or &lt;button&gt; element.Then, add the .data-target=”#id” class to connect the button with the collapsible content.The collapsible content is by default hidden. However you can add the .in to show content by default:12345678&lt;div class="container"&gt; &lt;button type="button" class="btn btn-info" data-toggle="collapse" data-target="#demo"&gt;Simple collapsible&lt;/button&gt; &lt;div id="demo" class="collapse in"&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. &lt;/div&gt;&lt;/div&gt; would be: Collapsible Panel123456789101112131415&lt;div class="container"&gt; &lt;div class="panel-group"&gt; &lt;div class="panel panel-default"&gt; &lt;div class="panel-heading"&gt; &lt;h4 class="panel-title"&gt; &lt;a data-toggle="collapse" href="#collapse1"&gt;Collapsible panel&lt;/a&gt; &lt;/h4&gt; &lt;/div&gt; &lt;div id="collapse1" class="panel-collapse collapse"&gt; &lt;div class="panel-body"&gt;Panel Body&lt;/div&gt; &lt;div class="panel-footer"&gt;Panel Footer&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; would be: Collapsible List Group12345678910111213141516171819&lt;div class="container"&gt; &lt;div class="panel-group"&gt; &lt;div class="panel panel-default"&gt; &lt;div class="panel-heading"&gt; &lt;h4 class="panel-title"&gt; &lt;a data-toggle="collapse" href="#collapse1"&gt;Collapsible list group&lt;/a&gt; &lt;/h4&gt; &lt;/div&gt; &lt;div id="collapse1" class="panel-collapse collapse"&gt; &lt;ul class="list-group"&gt; &lt;li class="list-group-item"&gt;One&lt;/li&gt; &lt;li class="list-group-item"&gt;Two&lt;/li&gt; &lt;li class="list-group-item"&gt;Three&lt;/li&gt; &lt;/ul&gt; &lt;div class="panel-footer"&gt;Footer&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; would be: AccordionUse the .data-parent attribute to make sure that all collapsible elements under the specified parent will be closed when one of the collapsible item is shown.12345678910111213141516171819202122232425262728293031323334&lt;div class="container"&gt; &lt;div class="panel-group" id="accordion"&gt; &lt;div class="panel panel-default"&gt; &lt;div class="panel-heading"&gt; &lt;h4 class="panel-title"&gt; &lt;a data-toggle="collapse" data-parent="#accordion" href="#collapse1"&gt;Collapsible Group 1&lt;/a&gt; &lt;/h4&gt; &lt;/div&gt; &lt;div id="collapse1" class="panel-collapse collapse in"&gt; &lt;div class="panel-body"&gt;Collapsible Group 1.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="panel panel-default"&gt; &lt;div class="panel-heading"&gt; &lt;h4 class="panel-title"&gt; &lt;a data-toggle="collapse" data-parent="#accordion" href="#collapse2"&gt;Collapsible Group 2&lt;/a&gt; &lt;/h4&gt; &lt;/div&gt; &lt;div id="collapse2" class="panel-collapse collapse"&gt; &lt;div class="panel-body"&gt;Collapsible Group 2.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="panel panel-default"&gt; &lt;div class="panel-heading"&gt; &lt;h4 class="panel-title"&gt; &lt;a data-toggle="collapse" data-parent="#accordion" href="#collapse3"&gt;Collapsible Group 3&lt;/a&gt; &lt;/h4&gt; &lt;/div&gt; &lt;div id="collapse3" class="panel-collapse collapse"&gt; &lt;div class="panel-body"&gt;Collapsible Group 3.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; would be: Tabs with Dropdown MenuTabs are created with &lt;ul class=’nav nav-tabs’&gt;.Add .active inside the &lt;li&gt; element to mark the current active tab..dropdown class indicates a dropdown tab. Dropdown menu is specified with &lt;ul&gt; and &lt;li&gt; elements.123456789101112131415&lt;div class="container"&gt;&lt;ul class="nav nav-tabs"&gt; &lt;li &gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li class="dropdown active" &gt; &lt;a class="dropdown-toggle" data-toggle="dropdown" href="#"&gt;Menu 1 &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class="dropdown-menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Submenu 1-1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Submenu 1-2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Submenu 1-3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li &gt;&lt;a href="#"&gt;Menu 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 3&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt; PillsPills are created with &lt;ul class=’nav nav-pills’&gt;. Also mark the current page with &lt;li class=’active’&gt;.Pills can also be displayed vertically, add the .nav-stacked class;123456789101112131415&lt;div class="container"&gt; &lt;ul class="nav nav-pills nav-stacked"&gt; &lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li class="dropdown"&gt; &lt;a class="dropdown-toggle" data-toggle="dropdown" href="#"&gt;Menu 1 &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class="dropdown-menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Submenu 1-1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Submenu 1-2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Submenu 1-3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; Tabs and PillsCentered Tabs and PillsAdd class .nav-justified to center/justify the tabs and pills. If screens are smaller then 768px, the list items are stacked(remain centered) 123456789101112131415161718&lt;div class="container"&gt; &lt;h3&gt;Centered Tabs&lt;/h3&gt; &lt;p&gt;To center/justify the tabs and pills, use the .nav-justified class. Note that on screens that are smaller than 768px, the list items are stacked (content will remain centered).&lt;/p&gt; &lt;ul class="nav nav-tabs nav-justified"&gt; &lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;br&gt; &lt;h3&gt;Centered Pills&lt;/h3&gt; &lt;ul class="nav nav-pills nav-justified"&gt; &lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Menu 3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; would be: Toggleable Tabs/PillsTo make tabs/pills toggleable, add the data-toggle=’tab|pill’ attribute to each link.Then, add tab-pane class with a unique ID for every tab and wrap them inside a &lt;div&gt; element with class .tab-content123456789101112131415161718192021222324252627&lt;div class="container"&gt; &lt;ul class="nav nav-tabs"&gt; &lt;!--or nav-pills with data-toggle="pill" --&gt; &lt;li class="active"&gt;&lt;a data-toggle="tab" href="#home"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a data-toggle="tab" href="#menu1"&gt;Menu 1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a data-toggle="tab" href="#menu2"&gt;Menu 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a data-toggle="tab" href="#menu3"&gt;Menu 3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class="tab-content"&gt; &lt;div id="home" class="tab-pane fade in active"&gt; &lt;h3&gt;HOME&lt;/h3&gt; &lt;p&gt;Home page&lt;/p&gt; &lt;/div&gt; &lt;div id="menu1" class="tab-pane fade"&gt; &lt;h3&gt;Menu 1&lt;/h3&gt; &lt;p&gt;Menu 1 page&lt;/p&gt; &lt;/div&gt; &lt;div id="menu2" class="tab-pane fade"&gt; &lt;h3&gt;Menu 2&lt;/h3&gt; &lt;p&gt;Menu 2 page&lt;/p&gt; &lt;/div&gt; &lt;div id="menu3" class="tab-pane fade"&gt; &lt;h3&gt;Menu 3&lt;/h3&gt; &lt;p&gt;Menu 3 page&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; would be: Navigation barsA standard navigation bar is created with &lt;nav class=’navbar navbar-default’&gt;. .navbar-inverse is an alternative of the navigation bar style. Navigation bar can also hold dropdown menus. .navbar-right class is used to right-align navigation bar buttons. .navbar-btn class is use to add a button inside the navigation bar. .navbar-form allow us to create a form inside the navigation bar. .navbar-fixed-top|bottom is used to fix the navigation bar at the top or bottom of the page. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;body style="height:500px"&gt;&lt;nav class="navbar navbar-inverse navbar-fixed-top"&gt; &lt;div class="container-fluid"&gt; &lt;div class="navbar-header"&gt; &lt;a class="navbar-brand" href="#"&gt;WebSiteName&lt;/a&gt; &lt;/div&gt; &lt;ul class="nav navbar-nav"&gt; &lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li class="dropdown"&gt;&lt;a class="dropdown-toggle" data-toggle="dropdown" href="#"&gt;Page 1 &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class="dropdown-menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Page 1-1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Page 1-2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Page 1-3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Page 2&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;ul class="nav navbar-nav navbar-right"&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;span class="glyphicon glyphicon-user"&gt;&lt;/span&gt; Sign Up&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;span class="glyphicon glyphicon-log-in"&gt;&lt;/span&gt; Login&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;button class='btn btn-default navbar-btn navbar-right'&gt;Button&lt;/button&gt; &lt;p class="navbar-text"&gt;Some Text&lt;/p&gt; &lt;form class="navbar-form navbar-left"&gt; &lt;div class="input-group"&gt; &lt;input type="text" class="form-control" placeholder="Search"&gt; &lt;div class="input-group-btn"&gt; &lt;button class="btn btn-default" type="submit"&gt; &lt;i class="glyphicon glyphicon-search"&gt;&lt;/i&gt; &lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt;&lt;/nav&gt;&lt;div class="container" style="margin-top:50px"&gt; &lt;h3&gt;Fixed Navbar&lt;/h3&gt; &lt;div class="row"&gt; &lt;div class="col-md-4"&gt; &lt;p&gt;A fixed navigation bar stays visible in a fixed position (top or bottom) independent of the page scroll.&lt;/p&gt; &lt;p&gt;A fixed navigation bar stays visible in a fixed position (top or bottom) independent of the page scroll.&lt;/p&gt; &lt;/div&gt; &lt;div class="col-md-4"&gt; &lt;p&gt;A fixed navigation bar stays visible in a fixed position (top or bottom) independent of the page scroll.&lt;/p&gt; &lt;p&gt;A fixed navigation bar stays visible in a fixed position (top or bottom) independent of the page scroll.&lt;/p&gt; &lt;/div&gt; &lt;div class="col-md-4"&gt; &lt;p&gt;A fixed navigation bar stays visible in a fixed position (top or bottom) independent of the page scroll.&lt;/p&gt; &lt;p&gt;A fixed navigation bar stays visible in a fixed position (top or bottom) independent of the page scroll.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;h1&gt;Scroll this page to see the effect&lt;/h1&gt;&lt;/body&gt; would be: Collapsing the navigation barThe navigation bar takes up too much space on a small screen, we should hide the navigation bar and only show it when it is needed. The navigation bar is replaced by a button in the top right corner. Only if the button is clicked, the navigation bar will be displayed.12345678910111213141516171819202122232425262728293031323334353637&lt;nav class="navbar navbar-inverse"&gt; &lt;div class="container-fluid"&gt; &lt;div class="navbar-header"&gt; &lt;button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar"&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;/button&gt; &lt;a class="navbar-brand" href="#"&gt;WebSiteName&lt;/a&gt; &lt;/div&gt; &lt;div class="collapse navbar-collapse" id="myNavbar"&gt; &lt;ul class="nav navbar-nav"&gt; &lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li class="dropdown"&gt; &lt;a class="dropdown-toggle" data-toggle="dropdown" href="#"&gt;Page 1 &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class="dropdown-menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Page 1-1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Page 1-2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Page 1-3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Page 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Page 3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;ul class="nav navbar-nav navbar-right"&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;span class="glyphicon glyphicon-user"&gt;&lt;/span&gt; Sign Up&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;span class="glyphicon glyphicon-log-in"&gt;&lt;/span&gt; Login&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt;&lt;/nav&gt;&lt;div class="container"&gt; &lt;h3&gt;Collapsible Navbar&lt;/h3&gt; &lt;p&gt;In this example, the navigation bar is hidden on small screens and replaced by a button in the top right corner (try to re-size this window). &lt;p&gt;Only when the button is clicked, the navigation bar will be displayed.&lt;/p&gt;&lt;/div&gt; would be: Form]]></content>
      <categories>
        <category>Bootstrap</category>
      </categories>
      <tags>
        <tag>Bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Manage touch events in a ViewGroup]]></title>
    <url>%2F%2FAndroid%2Fmanage-touch-events-in-a-ViewGroup</url>
    <content type="text"><![CDATA[Intercept Touch Events in a ViewGroupThe onInterceptTouchEvent() method is called whenever a touch event is detected on the surface of a ViewGroup, including on the surface of its children. If onInterceptTouchEvent() return true, the MotionEvent is intercepted, meaning it will not be passed on to the child, but rather to the onTouchEvent() method of the parent. Simply thinking of the process in code-presentation as follows:12345678public boolean dispatchTouchEvent(MotionEvent ev) &#123; if(!onInterceptTouchEvent())&#123; for(View child : children)&#123; if(child.dispatchTouchEvent(ev)) return true; &#125; &#125;return super.dispatchTouchEvent(ev);&#125; The onInterceptTouchEvent() method gives a parent the chance to see any touch event before its children. If you return true from onInterceptTouchEvent() the child view receives an ACTION_CANCEL and the events from that points forward are sent to parent’s onTouchEvent() method for the usual handling. onInterceptTouchEvent() method can also return false and simply spy on events as the travel down the view hierarchy to their usual targets, which will handle the events with their own onTouchEvent().]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git rebase example]]></title>
    <url>%2F%2FGit%2Fgit-rebase-example</url>
    <content type="text"><![CDATA[Assume the following history exists and the current branch is “master”. 123 A---B---C topic /D---E---F---G master From this point, the result of either of the following commands: 12git rebase mastergit rebase master topic would be: 123 A'--B'--C' topic /D---E---F---G master NOTE:git rebase master topic == git checkout topic &amp; git rebase master.When rebase exists, topic will remain the checkout-out branch Example Create a A.txt file in master branch Create and change to branch test and create a new file B.txt. Back to branch master and then create a new file C.txt 123master: A---C \test: B The result of following command:(now we are in branch master)12git rebase test mastergit rebase test would be:(we still in branch master)12345 master |A---C---B | test It works by going to the commen ancestor of the two branches(here is A), getting the diff introduced by each commit of the branch you’re on(here branch test), saving those diffs to temporary files, resetting the current branch to the same commit as the branch you are rebasing onto(branch master, set the HEAD to commit C), then applying each change in turn. Finally go back to branch master and do a fast-forward mergeNOTE Since there exists not diffs, commit B is simply appended to commit C]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
